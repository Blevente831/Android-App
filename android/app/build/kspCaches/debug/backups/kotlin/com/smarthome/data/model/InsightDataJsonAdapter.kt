// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "UNUSED_PARAMETER", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.smarthome.`data`.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import java.lang.reflect.Constructor
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import kotlin.collections.Map
import kotlin.collections.emptySet
import kotlin.jvm.Volatile
import kotlin.text.buildString

public class InsightDataJsonAdapter(
  moshi: Moshi,
) : JsonAdapter<InsightData>() {
  private val options: JsonReader.Options = JsonReader.Options.of("timePatterns", "dayPatterns",
      "preferences", "automationSuggestions", "energySavingTips", "seasonalAdjustments",
      "predictiveAutomations", "anomalies", "routines")

  private val nullableListOfStringAdapter: JsonAdapter<List<String>?> =
      moshi.adapter(Types.newParameterizedType(List::class.java, String::class.java), emptySet(),
      "timePatterns")

  private val nullableMapOfStringStringAdapter: JsonAdapter<Map<String, String>?> =
      moshi.adapter(Types.newParameterizedType(Map::class.java, String::class.java,
      String::class.java), emptySet(), "preferences")

  @Volatile
  private var constructorRef: Constructor<InsightData>? = null

  override fun toString(): String = buildString(33) {
      append("GeneratedJsonAdapter(").append("InsightData").append(')') }

  override fun fromJson(reader: JsonReader): InsightData {
    var timePatterns: List<String>? = null
    var dayPatterns: List<String>? = null
    var preferences: Map<String, String>? = null
    var automationSuggestions: List<String>? = null
    var energySavingTips: List<String>? = null
    var seasonalAdjustments: List<String>? = null
    var predictiveAutomations: List<String>? = null
    var anomalies: List<String>? = null
    var routines: List<String>? = null
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          timePatterns = nullableListOfStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          dayPatterns = nullableListOfStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          preferences = nullableMapOfStringStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        3 -> {
          automationSuggestions = nullableListOfStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 3).inv()
          mask0 = mask0 and 0xfffffff7.toInt()
        }
        4 -> {
          energySavingTips = nullableListOfStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 4).inv()
          mask0 = mask0 and 0xffffffef.toInt()
        }
        5 -> {
          seasonalAdjustments = nullableListOfStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 5).inv()
          mask0 = mask0 and 0xffffffdf.toInt()
        }
        6 -> {
          predictiveAutomations = nullableListOfStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 6).inv()
          mask0 = mask0 and 0xffffffbf.toInt()
        }
        7 -> {
          anomalies = nullableListOfStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 7).inv()
          mask0 = mask0 and 0xffffff7f.toInt()
        }
        8 -> {
          routines = nullableListOfStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 8).inv()
          mask0 = mask0 and 0xfffffeff.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    if (mask0 == 0xfffffe00.toInt()) {
      // All parameters with defaults are set, invoke the constructor directly
      return  InsightData(
          timePatterns = timePatterns,
          dayPatterns = dayPatterns,
          preferences = preferences,
          automationSuggestions = automationSuggestions,
          energySavingTips = energySavingTips,
          seasonalAdjustments = seasonalAdjustments,
          predictiveAutomations = predictiveAutomations,
          anomalies = anomalies,
          routines = routines
      )
    } else {
      // Reflectively invoke the synthetic defaults constructor
      @Suppress("UNCHECKED_CAST")
      val localConstructor: Constructor<InsightData> = this.constructorRef ?:
          InsightData::class.java.getDeclaredConstructor(List::class.java, List::class.java,
          Map::class.java, List::class.java, List::class.java, List::class.java, List::class.java,
          List::class.java, List::class.java, Int::class.javaPrimitiveType,
          Util.DEFAULT_CONSTRUCTOR_MARKER).also { this.constructorRef = it }
      return localConstructor.newInstance(
          timePatterns,
          dayPatterns,
          preferences,
          automationSuggestions,
          energySavingTips,
          seasonalAdjustments,
          predictiveAutomations,
          anomalies,
          routines,
          mask0,
          /* DefaultConstructorMarker */ null
      )
    }
  }

  override fun toJson(writer: JsonWriter, value_: InsightData?) {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("timePatterns")
    nullableListOfStringAdapter.toJson(writer, value_.timePatterns)
    writer.name("dayPatterns")
    nullableListOfStringAdapter.toJson(writer, value_.dayPatterns)
    writer.name("preferences")
    nullableMapOfStringStringAdapter.toJson(writer, value_.preferences)
    writer.name("automationSuggestions")
    nullableListOfStringAdapter.toJson(writer, value_.automationSuggestions)
    writer.name("energySavingTips")
    nullableListOfStringAdapter.toJson(writer, value_.energySavingTips)
    writer.name("seasonalAdjustments")
    nullableListOfStringAdapter.toJson(writer, value_.seasonalAdjustments)
    writer.name("predictiveAutomations")
    nullableListOfStringAdapter.toJson(writer, value_.predictiveAutomations)
    writer.name("anomalies")
    nullableListOfStringAdapter.toJson(writer, value_.anomalies)
    writer.name("routines")
    nullableListOfStringAdapter.toJson(writer, value_.routines)
    writer.endObject()
  }
}
